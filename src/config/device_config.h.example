/**
 * @file device_config.h
 * @brief Device-specific configuration for Scribe ESP32-C3 Thermal Printer
 * @author Adam Knowles
 * @date 2025
 * @copyright Copyright (c) 2025 Adam Knowles. All rights reserved.
 * @license Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International
 *
 * This file contains device-specific settings that MUST be configured for each device.
 * This includes WiFi credentials, MQTT settings, API keys, and personal preferences.
 *
 * IMPORTANT: This file contains secrets and should be kept private.
 * It is gitignored and should never be committed to version control.
 *
 * INSTRUCTIONS: Copy this file to device_config.h and fill in your actual credentials.
 * The device_config.h file is gitignored to keep your secrets safe.
 */

#ifndef DEVICE_CONFIG_H
#define DEVICE_CONFIG_H

#include <esp_log.h>

// ============================================================================
// LOG LEVEL CONSTANTS
// ============================================================================
// Custom log levels for application logging (LOG_* macros)
#define LOG_LEVEL_ERROR 2
#define LOG_LEVEL_WARNING 3
#define LOG_LEVEL_NOTICE 4
#define LOG_LEVEL_VERBOSE 6

// ============================================================================
// DEVICE-SPECIFIC SETTINGS - MUST BE CONFIGURED PER DEVICE
// ============================================================================

// Default WiFi settings
static const char *defaultWifiSSID = "YOUR_WIFI_SSID";
static const char *defaultWifiPassword = "YOUR_WIFI_PASSWORD";

// Default device identity
static const char *defaultDeviceOwner = "YOUR_DEVICE_NAME";
static const char *defaultTimezone = "Europe/London";

// Default MQTT broker settings
static const bool defaultMqttEnabled = false; // Disable MQTT by default
static const char *defaultMqttServer = "YOUR_MQTT_SERVER.hivemq.cloud";
static const int defaultMqttPort = 8883; // TLS port
static const char *defaultMqttUsername = "YOUR_MQTT_USERNAME";
static const char *defaultMqttPassword = "YOUR_MQTT_PASSWORD";

// Unbidden Ink (ChatGPT) API configuration
static const bool defaultEnableUnbiddenInk = false; // Enable/disable Unbidden Ink feature
static const char *defaultChatgptApiToken = "YOUR_OPENAI_API_KEY"; // Default ChatGPT API token
static const int defaultUnbiddenInkStartHour = 10;                                                 // Working hours start (24-hour format)
static const int defaultUnbiddenInkEndHour = 16;                                                   // Working hours end (24-hour format)
static const int defaultUnbiddenInkFrequencyMinutes = 60;                                          // Send 1 message in every X minute window

// BetterStack logging token (optional)
static const char *betterStackToken = ""; // BetterStack API token (leave empty to disable)

// ============================================================================
// LOGGING PREFERENCES - Configure debugging and logging behavior
// ============================================================================
// NOTE: These are compile-time settings only (not stored in NVS)

// Logging destinations
static const bool enableSerialLogging = true;       // Serial console
static const bool enableFileLogging = false;        // LittleFS file (untested)
static const bool enableMQTTLogging = false;        // MQTT topic
static const bool enableBetterStackLogging = false; // BetterStack (slow but useful for debugging)

// Application logging levels (custom LOG_* macros)
// Options: LOG_LEVEL_VERBOSE, LOG_LEVEL_NOTICE, LOG_LEVEL_WARNING, LOG_LEVEL_ERROR
// VERBOSE = Everything (very noisy, debug only)
// NOTICE = Important events (default, recommended)
// WARNING = Warnings and errors only
// ERROR = Errors only
static const int logLevel = LOG_LEVEL_NOTICE;

// ESP-IDF system logging levels (ESP_LOGx macros)
// Options: ESP_LOG_VERBOSE, ESP_LOG_INFO, ESP_LOG_WARN, ESP_LOG_ERROR, ESP_LOG_NONE
// WARN = Warnings and errors (default, recommended)
// INFO = More verbose system info
// ERROR = Errors only
// NONE = Completely silent
static const esp_log_level_t espLogLevel = ESP_LOG_WARN;

#endif